@model Inventory.Models.Product
@using InventroryManagementSystem.Helpers


<script type="text/javascript">

    function TotalQty() {
        var j = jQuery.noConflict();
        var sum = 0;

        j('.Qty').each(function () {

            var al = j(this).closest("tr");
            var all = al.find(".Qty").val();

            sum += Number(all);

        });

        j("#InnerPackQty").val(Number(sum));

    }

</script>
<script type="text/javascript">
    var j = jQuery.noConflict();

    j(document).ready(function () {
        AddClickEvents();

    });

    j("#Add-Item").on('click', '.row-button', function () {
        //var df = $(this).closest("tr");
        j(this).closest("tr").remove();

    });


</script>

<script type="text/javascript">
    var j = jQuery.noConflict();
    j(function () {
        
        j("#tabs").tabs();
        j("#dialog").dialog({ width: 900 });
    });
</script>

<style>
    

    #row-buttonadd {
        height: 26px;
        width: 30px;
        background-image: url(/Content/index.jpg);
        background-position: center center;
        background-repeat: no-repeat;
    }

    #row-button {
        height: 26px;
        width: 30px;
        background-image: url(/Content/del.jpg);
        background-position: center center;
        background-repeat: no-repeat;
    }


</style>

<div id="tabs">
    <ul>

        <li><a href="#tab1">Product Info</a></li>
        <li><a href="#tab2">Product Vendors</a></li>
        <li><a href="#tab3">Order History</a></li>

    </ul>

    <div id="my-tab-content" class="tab-content">
        <div class="tab-pane  active" id="tab1">
            @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "ajaxUploadForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.ProdId)
                <div class="form-horizontal">
                    <div class="col-md-12 well well-smal">
                        <div class="row well well-small">
                            <div class="col-md-5">

                                <strong>BASIC</strong><br />

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, "Item Name", new { @class = "control-label col-md-4" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(model => model.Name)
                                        @Html.ValidationMessageFor(model => model.Name)
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, "Category", new { @class = "control-label col-md-4" })
                                    <div class="col-md-1">
                                        @Html.DropDownListFor(model => model.CategoryId, Utility.GetProductCategory(), "Select")
                                        @Html.ValidationMessageFor(model => model.CategoryId)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ItemType, "Type", new { @class = "control-label col-md-4" })
                                    <div class="col-md-1">
                                        @Html.DropDownListFor(model => model.ItemTypeId, Utility.GetProductType(), "Select")
                                        @Html.ValidationMessageFor(model => model.ItemTypeId)
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductCode, "Code", new { @class = "control-label col-md-4" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(model => model.ProductCode)
                                        @Html.ValidationMessageFor(model => model.ProductCode)
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-1"></div>

                            <div class="col-md-6 well well-small">

                                <h4>Picture</h4>

                                <div class="box box-primary">


                                    <div id="preview">
                                        @if (Model.FileAttachment != null && Model.FileAttachment.Data != null)
                                        {
                                            <img src="data:image/jpg;base64,@(Convert.ToBase64String(Model.FileAttachment.Data))" id="imgThumbnail" style="width: 210px; height: 80px" />

                                        }
                                        else
                                        {

                                            <img src="~/Image/noimage.png" id="imgThumbnail" style="width: 210px; height: 80px" />

                                        }
                                    </div>
                                    @Html.FileFor(model => model.file, new { @onchange = "ChangeImage(this)", @id = "fileupload", Name = "file" })

                                    <input type="button" value="Clear " class="btn btn-default" />


                                </div>
                            </div>
                        </div>

                        
                        <div class="row col-md-8 well well-small" id="Add-Item">
                            <strong>Inventory</strong>

                            <div class="box-body" id="Add-Item">
                                @Html.ActionLink(" ", "_InventoryStore", null, new { @class = "addProductItem row-button pull-right", @id = "row-buttonadd" })
                                <table id="example2" class="table table-bordered">
                                    <tr>
                                        <th>
                                            Location
                                        </th>
                                        <th>Quantity</th>
                                    </tr>

                                    @foreach (var item in Model.inventoryStore.InventoryStorList)
                                    {
                                        Html.RenderPartial("_InventoryStore", item);
                                    }



                                </table>
                                <table><tr><td><b>Quantity On Hand</b></td><td>@Html.TextBoxFor(m => m.InnerPackQty)</td></tr></table>

                            </div>

                        </div>

                        <input type="submit" value="Save" class="bg-blue" />
                    </div>
                    </div>


            }
        </div>

        <div class="tab-pane" id="tab2">
            @Html.Partial("_ProductVendors")

        </div>
        <div class="tab-pane" id="tab3">
            @Html.Partial("_OrderHistory")
        </div>
    </div>

</div>
