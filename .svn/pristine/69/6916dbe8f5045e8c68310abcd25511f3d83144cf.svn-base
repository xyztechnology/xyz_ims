@model Inventory.Models.Product
@using InventroryManagementSystem.Helpers


<script type="text/javascript">

    function TotalQty() {
        var j = jQuery.noConflict();
        var sum = 0;

        j('.Qty').each(function () {

            var al = j(this).closest("tr");
            var all = al.find(".Qty").val();

            sum += Number(all);

        });

        j("#InnerPackQty").val(Number(sum));

    }

</script>

<script type="text/javascript">
    var j = jQuery.noConflict();
    j(function () {
        
        j("#tabs").tabs();
        j("#dialog").dialog({ width: 900 });
    });
</script>

<div id="tabs">
    <ul>

        <li><a href="#tab1">Product Info</a></li>
        <li><a href="#tab2">Product Vendors</a></li>
        <li><a href="#tab3">Order History</a></li>

    </ul>

    <div id="my-tab-content" class="tab-content">
        <div class="tab-pane  active" id="tab1">
            @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "ajaxUploadForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.ProdId)
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="box box-primary">
                                <div class="box-body" style="border:groove">
                                    <strong>BASIC</strong><br />

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, "Item Name", new { @class = "control-label col-md-3" })
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.Name)
                                            @Html.ValidationMessageFor(model => model.Name)
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, "Category", new { @class = "control-label col-md-3" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.CategoryId, Utility.GetProductCategory(), "Select")
                                            @Html.ValidationMessageFor(model => model.CategoryId)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ItemType, "Type", new { @class = "control-label col-md-3" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.ItemTypeId, Utility.GetProductType(), "Select")
                                            @Html.ValidationMessageFor(model => model.ItemTypeId)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ProductCode, "Code", new { @class = "control-label col-md-3" })
                                        <div class="col-md-2">
                                            @Html.EditorFor(model => model.ProductCode)
                                            @Html.ValidationMessageFor(model => model.ProductCode)
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                        <div class="col-md-2"></div>
                        <div class="col-md-7">

                            <h4>Picture</h4>

                            <div class="box box-primary">
                                <div class="box-body" style="border:groove">

                                    <div id="preview">
                                        @if (Model.FileAttachment != null && Model.FileAttachment.Data != null)
                                        {
                                            <img src="data:image/jpg;base64,@(Convert.ToBase64String(Model.FileAttachment.Data))" id="imgThumbnail" style="width: 210px; height: 80px" />

                                        }
                                        else
                                        {

                                            <img src="~/Image/noimage.png" id="imgThumbnail" style="width: 210px; height: 80px" />

                                        }
                                    </div>
                                    @Html.FileFor(model => model.file, new { @onchange = "ChangeImage(this)", @id = "fileupload", Name = "file" })

                                    <input type="button" value="Clear " class="btn btn-default" />

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row"><div class="col-md-10"></div></div>
                <div class="row">

                    <div class="col-md-4"></div>
                    <div class="col-md-8">
                        <div class="box box-primary">
                            <div class="box-body" style="border:groove">
                                <br /><br />
                                <strong>Inventory</strong>
                                <div class="box-body">
                                    <table id="example2" class="table table-bordered">
                                        <tr>
                                            <td>
                                                <b> Location</b>
                                            </td>
                                            <td><b>Quantity</b></td>
                                        </tr>
                                        @foreach (var item in Model.inventoryStore.InventoryStorList)
                                        {
                                            Html.RenderPartial("_InventoryStore", item);
                                        }

                                        <tr><td><b>Quantity On Hand</b></td><td>@Html.TextBoxFor(m => m.InnerPackQty)</td></tr>

                                    </table>
                                    <input type="submit" value="Save" class="bg-blue" />
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            }
        </div>

        <div class="tab-pane" id="tab2">
            @Html.Partial("_ProductVendors")

        </div>
        <div class="tab-pane" id="tab3">
            @Html.Partial("_OrderHistory")
        </div>
    </div>

</div>
