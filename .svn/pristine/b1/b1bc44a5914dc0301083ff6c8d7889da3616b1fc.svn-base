namespace InventroryManagementSystem.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class dsda : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("dbo.SalesOrder", "CurrencyId", "dbo.Currency");
            DropForeignKey("dbo.SalesOrder", "PaymentTermsId", "dbo.PaymentTerms");
            DropForeignKey("dbo.SalesOrder", "ParentSalesOrderIdId", "dbo.SalesOrder");
            DropForeignKey("dbo.SalesOrder", "LastModUserId", "dbo.User");
            DropIndex("dbo.SalesOrder", new[] { "CurrencyId" });
            DropIndex("dbo.SalesOrder", new[] { "PaymentTermsId" });
            DropIndex("dbo.SalesOrder", new[] { "ParentSalesOrderIdId" });
            DropIndex("dbo.SalesOrder", new[] { "LastModUserId" });
            AddColumn("dbo.SalesOrder", "Status", c => c.String());
            AddColumn("dbo.AspNetUsers", "Userid", c => c.Int());
            DropColumn("dbo.SalesOrder", "Version");
            DropColumn("dbo.SalesOrder", "SalesRep");
            DropColumn("dbo.SalesOrder", "PONumber");
            DropColumn("dbo.SalesOrder", "RequestShipDate");
            DropColumn("dbo.SalesOrder", "PaymentTermsId");
            DropColumn("dbo.SalesOrder", "DueDate");
            DropColumn("dbo.SalesOrder", "OrderExtra");
            DropColumn("dbo.SalesOrder", "Email");
            DropColumn("dbo.SalesOrder", "PickedDate");
            DropColumn("dbo.SalesOrder", "PickingRemarks");
            DropColumn("dbo.SalesOrder", "PackedDate");
            DropColumn("dbo.SalesOrder", "PackingRemarks");
            DropColumn("dbo.SalesOrder", "ShippingRemarks");
            DropColumn("dbo.SalesOrder", "InvoicedDate");
            DropColumn("dbo.SalesOrder", "ReturnRemarks");
            DropColumn("dbo.SalesOrder", "ReturnSubTotal");
            DropColumn("dbo.SalesOrder", "ReturnExtra");
            DropColumn("dbo.SalesOrder", "ReturnTotal");
            DropColumn("dbo.SalesOrder", "ReturnFee");
            DropColumn("dbo.SalesOrder", "RestockRemarks");
            DropColumn("dbo.SalesOrder", "BillingAddress1");
            DropColumn("dbo.SalesOrder", "BillingAddress2");
            DropColumn("dbo.SalesOrder", "BillingCity");
            DropColumn("dbo.SalesOrder", "BillingState");
            DropColumn("dbo.SalesOrder", "BillingCountry");
            DropColumn("dbo.SalesOrder", "BillingPostalCode");
            DropColumn("dbo.SalesOrder", "BillingAddressRemarks");
            DropColumn("dbo.SalesOrder", "BillingAddressType");
            DropColumn("dbo.SalesOrder", "ShippingAddress1");
            DropColumn("dbo.SalesOrder", "ShippingAddress2");
            DropColumn("dbo.SalesOrder", "ShippingCity");
            DropColumn("dbo.SalesOrder", "ShippingState");
            DropColumn("dbo.SalesOrder", "ShippingCountry");
            DropColumn("dbo.SalesOrder", "ShippingPostalCode");
            DropColumn("dbo.SalesOrder", "ShippingAddressRemarks");
            DropColumn("dbo.SalesOrder", "ShippingAddressType");
            DropColumn("dbo.SalesOrder", "Custom1");
            DropColumn("dbo.SalesOrder", "Custom2");
            DropColumn("dbo.SalesOrder", "Custom3");
            DropColumn("dbo.SalesOrder", "Custom4");
            DropColumn("dbo.SalesOrder", "Custom5");
            DropColumn("dbo.SalesOrder", "LastModUserId");
            DropColumn("dbo.SalesOrder", "LastModDttm");
            DropColumn("dbo.SalesOrder", "TimeStamp");
            DropColumn("dbo.SalesOrder", "ParentSalesOrderIdId");
            DropColumn("dbo.SalesOrder", "SplitPartNumber");
            DropColumn("dbo.SalesOrder", "ShowShipping");
            DropColumn("dbo.SalesOrder", "ShipToCompanyName");
            DropColumn("dbo.SalesOrder", "CurrencyId");
            DropColumn("dbo.SalesOrder", "ExchangeRate");
            DropColumn("dbo.SalesOrder", "PaymentStatus");
            DropColumn("dbo.SalesOrder", "InventoryStatus");
            DropColumn("dbo.SalesOrder", "IsCancelled");
            DropColumn("dbo.SalesOrder", "SummaryLinePermutation");
            DropColumn("dbo.SalesOrder", "NonCustomerCost");
            DropColumn("dbo.SalesOrder", "NonCustomerCostIsPercemt");
            DropColumn("dbo.SalesOrder", "IsQuote");
            DropColumn("dbo.SalesOrder", "IsInvoiced");
            DropColumn("dbo.SalesOrder", "IsCompleted");
            DropColumn("dbo.SalesOrder", "SameBillingAndShipping");
            DropColumn("dbo.SalesOrder", "IsTaxInclusive");
            DropColumn("dbo.SalesOrder", "Remarks");
        }
        
        public override void Down()
        {
            AddColumn("dbo.SalesOrder", "Remarks", c => c.String());
            AddColumn("dbo.SalesOrder", "IsTaxInclusive", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "SameBillingAndShipping", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "IsCompleted", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "IsInvoiced", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "IsQuote", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "NonCustomerCostIsPercemt", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "NonCustomerCost", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "SummaryLinePermutation", c => c.String());
            AddColumn("dbo.SalesOrder", "IsCancelled", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "InventoryStatus", c => c.Int());
            AddColumn("dbo.SalesOrder", "PaymentStatus", c => c.Int());
            AddColumn("dbo.SalesOrder", "ExchangeRate", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "CurrencyId", c => c.Int());
            AddColumn("dbo.SalesOrder", "ShipToCompanyName", c => c.String());
            AddColumn("dbo.SalesOrder", "ShowShipping", c => c.Boolean(nullable: false));
            AddColumn("dbo.SalesOrder", "SplitPartNumber", c => c.Int());
            AddColumn("dbo.SalesOrder", "ParentSalesOrderIdId", c => c.Int());
            AddColumn("dbo.SalesOrder", "TimeStamp", c => c.Binary());
            AddColumn("dbo.SalesOrder", "LastModDttm", c => c.DateTime());
            AddColumn("dbo.SalesOrder", "LastModUserId", c => c.Int());
            AddColumn("dbo.SalesOrder", "Custom5", c => c.String());
            AddColumn("dbo.SalesOrder", "Custom4", c => c.String());
            AddColumn("dbo.SalesOrder", "Custom3", c => c.String());
            AddColumn("dbo.SalesOrder", "Custom2", c => c.String());
            AddColumn("dbo.SalesOrder", "Custom1", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingAddressType", c => c.Int());
            AddColumn("dbo.SalesOrder", "ShippingAddressRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingPostalCode", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingCountry", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingState", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingCity", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingAddress2", c => c.String());
            AddColumn("dbo.SalesOrder", "ShippingAddress1", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingAddressType", c => c.Int());
            AddColumn("dbo.SalesOrder", "BillingAddressRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingPostalCode", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingCountry", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingState", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingCity", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingAddress2", c => c.String());
            AddColumn("dbo.SalesOrder", "BillingAddress1", c => c.String());
            AddColumn("dbo.SalesOrder", "RestockRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "ReturnFee", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "ReturnTotal", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "ReturnExtra", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "ReturnSubTotal", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "ReturnRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "InvoicedDate", c => c.DateTime());
            AddColumn("dbo.SalesOrder", "ShippingRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "PackingRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "PackedDate", c => c.DateTime());
            AddColumn("dbo.SalesOrder", "PickingRemarks", c => c.String());
            AddColumn("dbo.SalesOrder", "PickedDate", c => c.DateTime());
            AddColumn("dbo.SalesOrder", "Email", c => c.String());
            AddColumn("dbo.SalesOrder", "OrderExtra", c => c.Decimal(precision: 18, scale: 2));
            AddColumn("dbo.SalesOrder", "DueDate", c => c.DateTime());
            AddColumn("dbo.SalesOrder", "PaymentTermsId", c => c.Int());
            AddColumn("dbo.SalesOrder", "RequestShipDate", c => c.DateTime());
            AddColumn("dbo.SalesOrder", "PONumber", c => c.String());
            AddColumn("dbo.SalesOrder", "SalesRep", c => c.String());
            AddColumn("dbo.SalesOrder", "Version", c => c.Int());
            DropColumn("dbo.AspNetUsers", "Userid");
            DropColumn("dbo.SalesOrder", "Status");
            CreateIndex("dbo.SalesOrder", "LastModUserId");
            CreateIndex("dbo.SalesOrder", "ParentSalesOrderIdId");
            CreateIndex("dbo.SalesOrder", "PaymentTermsId");
            CreateIndex("dbo.SalesOrder", "CurrencyId");
            AddForeignKey("dbo.SalesOrder", "LastModUserId", "dbo.User", "UserId");
            AddForeignKey("dbo.SalesOrder", "ParentSalesOrderIdId", "dbo.SalesOrder", "SalesOrderId");
            AddForeignKey("dbo.SalesOrder", "PaymentTermsId", "dbo.PaymentTerms", "PaymentTermsId");
            AddForeignKey("dbo.SalesOrder", "CurrencyId", "dbo.Currency", "CurrencyId");
        }
    }
}
