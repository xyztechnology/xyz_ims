@model Inventory.Models.SalesOrder

<script src="~/Scripts/OrderManagerScript.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


<div id="AddLocation"></div>
<script type="text/javascript">
  
    var j = jQuery.noConflict();
   
    function bindCustomerDetail(CustomerId) {
        var CustId = j("#CustomerId").val();
       

        if (CustomerId != 0) {

            j.ajax({
                url: "@Url.Action("GetCustomerDetail", "JsonRequest")",
                data: { customerid: CustomerId },


                error: function () {
                    alert("An error occurred.");
                },
                success: function (data) {

                    j("#ContactName").val(data.ContactName);
                    j("#Phone").val(data.Phone);
                    j("#Location_Name").val(data.LocationId.Name);
                }
            });
        }
    }
</script>

<script type="text/javascript">
    var j = jQuery.noConflict();

    j(document).ready(function () {
        AddClickEvents();

    });

    j("#Add-Item").on('click', '.row-button', function () {
        //var df = $(this).closest("tr");
        j(this).closest("tr").remove();

    });

    function AddNewLocation(value) {
        if (value == -1) {
            j("#AddLocation").dialog({
                autoOpen: true,
                position: { my: "center", at: "top+150", of: window },
                width: 600,
                resizable: false,
                title: 'Location details',
                modal: true,
                open: function () {
                    $(this).load('/GeneralSetting/LocationSetup');

                },

                //buttons: {
                //    //Create: function () {
                //    //    j("form").submit();
                //    //},

                //    Close: function () {
                      
                //        j(this).dialog("close");
                //    }
                //}




            });


        }
    }


</script>

<style>
    .payrollentrylabel {
        height: 20px !important;
        font-size: 12px;
        margin-left: 0px;
    }

    .payrollentryinput {
        height: 25px !important;
        font-size: 11px !important;
    }

    #row-buttonadd {
        height: 26px;
        width: 30px;
        background-image: url(/Content/index.jpg);
        background-position: center center;
        background-repeat: no-repeat;
    }

    #row-button {
        height: 26px;
        width: 30px;
        background-image: url(/Content/del.jpg);
        background-position: center center;
        background-repeat: no-repeat;
    }


    .background {
        background-color: pink;
    }
</style>


@using (Ajax.BeginForm("Create", "SalesOrder", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "SearchResult", InsertionMode = InsertionMode.Replace }))
{
    @Html.AntiForgeryToken()
    
      @Html.HiddenFor(m => m.SalesOrderId)
    <div class="form-horizontal">
        <div class="box box-primary">
            <div class="col-md-12">
                <div class="row well well-smal">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Customer, new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.DropDownListFor(model => model.CustomerId, Utility.GetCustomerName(), "Select", new { @onchange = "bindCustomerDetail(this.value)" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactName, "Contact", new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.EditorFor(model => model.ContactName)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, "Phone", new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.EditorFor(model => model.Phone)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model, "Address", new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.EditorFor(model => model.Location.Name)
                            </div>
                        </div>
                    </div>


                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-3" })
                            <div class="col-md-1">
                                @Html.DropDownListFor(model => model.LocationId, Utility.GetLocation(), "Select", new { @onchange = "AddNewLocation(this.value)" })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrderNumber, "Issue No", new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.EditorFor(model => model.OrderNumber)
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrderDate, "Date", new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.TextBoxFor(model => model.OrderDate, new {  })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, "Status", new { @class = "control-label col-md-3" })

                            <div class="col-md-1">
                                @Html.EditorFor(model => model.Status)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row well well-small col-md-12" id="Add-Item">
                    <script type="text/javascript">
                         function isNumberKey(evt) {
                             var charCode = (evt.which) ? evt.which : event.keyCode;
                             if (charCode != 46 && charCode > 31
                                 && (charCode < 48 || charCode > 57))
                                 return false;

                             return true;
                         }
                    </script>



                    @Html.ActionLink(" ", "_SalesOrderList", null, new { @class = "addProductItem row-button pull-right", @id = "row-buttonadd" })
                    <table id="example2" class="table table-bordered">
                        <tr>
                            <th width="100px"><strong>Item</strong></th>

                            <th><strong>Quantity</strong></th>
                            <th><strong>Unit Price</strong></th>
                            <th><strong>Discount</strong></th>
                            <th><strong>Sub-Total</strong></th>


                        </tr>
                    </table>

                    @foreach (var item in Model.SalesOrderDetail.SalesOrderDetailList)
        {

            Html.RenderPartial("_SalesOrderList", item);

        }
                </div>



                <div class="row well well-smal">
                    <div class="col-sm-6">
                        <table>

                            <tr>
                                <td>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OrderRemarks, "Remarks", new { @class = "control-label col-md-4" })
                                        <div class="col-md-1">
                                            @Html.TextAreaFor(model => model.OrderRemarks, new { @style = "width:180px;height:60px" })
                                            @Html.ValidationMessageFor(model => model.OrderRemarks)
                                        </div>
                                    </div>
                                </td>
                                <td>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OrderSubTotal, "SubToTal", new { @class = "control-label col-md-10" })
                                        <div class="col-md-1">
                                            @Html.EditorFor(model => model.OrderSubTotal)
                                            @Html.ValidationMessageFor(model => model.OrderSubTotal)
                                        </div>
                                    </div><div class="form-group">
                                        @Html.LabelFor(model => model.Total, new { @class = "control-label col-md-10" })
                                        <div class="col-md-1">
                                            @Html.EditorFor(model => model.Total)
                                            @Html.ValidationMessageFor(model => model.Total)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AmountPaid, "Paid", new { @class = "control-label col-md-10" })
                                        <div class="col-md-1">
                                            @Html.EditorFor(model => model.AmountPaid)
                                            @Html.ValidationMessageFor(model => model.AmountPaid)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Balance, new { @class = "control-label col-md-10" })
                                        <div class="col-md-1">
                                            @Html.EditorFor(model => model.Balance)
                                            @Html.ValidationMessageFor(model => model.Balance)
                                        </div>
                                    </div>


                                </td>

                            </tr>
                        </table>
                    </div>

                </div>


                <div class="row">
                    <div style="padding-left:130px">
                        <br /> <input type="submit" value="Save" class="bg-blue" id="btncatsave" />
                    </div>
                </div>

            </div>
        </div>

    </div>

}

<script>
    var j = jQuery.noConflict();
    j(function () {
        j("#OrderDate").datepicker();
    });
</script>