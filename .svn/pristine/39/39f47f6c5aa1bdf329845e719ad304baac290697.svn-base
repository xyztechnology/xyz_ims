using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Inventory.Models
{
    public class PurchaseOrder
    {
        [Key()]
        public int PurchaseOrderId { get; set; }
        public int? Version { get; set; }
        public string OrderNo { get; set; }
        public string VendorOrderNumber { get; set; }
        public DateTime? OrderDate { get; set; }

        public int? VendorId { get; set; }
        [ForeignKey("VendorId")]
        public virtual Vendor Vendor { get; set; }

        public int? PaymentTermsId { get; set; }
        [ForeignKey("PaymentTermsId")]
        public virtual PaymentTerms PaymentTerms { get; set; }
        public string Carrier { get; set; }
        public string ContactName { get; set; }
        public string Phone { get; set; }
        public string VendorAddress1 { get; set; }

        public string VendorAddress2 { get; set; }
        public string VendorCity { get; set; }
        public string VendorState { get; set; }
        public string VendorCountry { get; set; }
        public string VendorPostalCode { get; set; }
        public string VendorAddressRemarks { get; set; }
        public string VendorAddressType { get; set; }
        public string ShipToAddress1 { get; set; }
        public string ShipToAddress2 { get; set; }
        public string ShipToCity { get; set; }
        public string ShipToState { get; set; }
        public string ShipToCountry { get; set; }
        public string ShipToPostalCode { get; set; }
        public string ShipToAddressRemarks { get; set; }
        public string ShipToAddress { get; set; }
        public DateTime? RequestShipDate { get; set; }
        public int? LocationId { get; set; }
        [ForeignKey("LocationId")]
        public virtual Location Location { get; set; }
        public string OrderRemarks { get; set; }
        public decimal? OrderSubTotal { get; set; }

        public decimal? OrderExtra { get; set; }
        public decimal? OrderTotal { get; set; }
        public string ReceiveRemarks { get; set; }
        public DateTime? DueDate { get; set; }
        public decimal? AmountPaid { get; set; }
        public string Status { get; set; }
        public decimal? SubTotal { get; set; }
        public decimal? TaxAmount { get; set; }
        public decimal? ReturnTotal { get; set; }
        public decimal? AditionalCost { get; set; }
        public decimal? Total { get; set; }
        public decimal? Balance { get; set; }
        public int? PaymentStatus { get; set; }
        public int? InventoryStatus { get; set; }
        public bool? IsCancelled { get; set; }
        public bool? IsCompleted { get; set; }
        public bool? IsTaxInclusive { get; set; }
        [NotMapped()]
        public List<PurchaseOrder> PurchaseOrderList { get; set; }
        [NotMapped()]
        public Product Product { get; set; }
        [NotMapped()]
        public PurchaseOrderDetail PurchaseOrderDetail { get; set; }
    }
}